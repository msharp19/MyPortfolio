
@{
    ViewBag.Title = "WorkItem";
}
<main role="main-inner-wrapper" class="container">
    <div class="work-details">
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-4">
                <header role="work-title">
                    <h2>Image Pre-Proessing</h2>
                    <a href="#">Project URL: Private <i class="fa fa-lock" aria-hidden="true"></i></a>
                </header>
            </div>
            <div class="col-xs-12 col-sm-12 col-md-8">
                <section>
                    <p>This is a WinForm Desktop application to build image pre-processing chains. Essentially it is just an ordered list of functions and arguments performed on each image used for training/testing which can then be stored in an xml file. You are able to test out the chains before saving or discarding to start again.</p>
                    <p>The library used was <a href="http://imageprocessor.org/">ImageProcessor</a>. I selected this library because it had entropy crop which is very important for creating datasets. Some 'noise' from the image can be removed in a lot of cases because only the main subject in the image is kept, the rest of cropped. It is also useful to duplicate the datasets in different rotations, the chain can also be used for this.</p>
                    <p>
                        <strong>Details</strong><br />
                        Winform C#
                        .NET Framework 4.5.2
                    </p>
                </section>
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="work-images grid">
            <ul class="grid-lod effect-2" id="grid">
                <li>
                    <p class="left-align">This is the application with a raw image (no processing) with some functions selected.</p>
                    <a href="~/images/img/img1.png" class="pointer">
                        <img src="~/images/img/img1.png" alt="" class="img-responsive" />
                    </a>
                </li>
                <li>
                    <p class="left-align">This is the image from above after the chain has been applied to the image. As can be seen the image is much tighter on the dog, we have removed some potential noise from the image.</p>
                    <a href="~/images/img/img1-2.png" class="pointer">
                        <img src="~/images/img/img1-2.png" alt="" class="img-responsive" />
                    </a>
                </li>
                <li>
                    <p class="left-align">Here i have added an extra function (Roberts Cross Edge Filter) which finds the edges in the image via convolution (talked about in my <a href="../Blog/BlogPost?blogPost=Convolution" class="inline">blog post</a>). In reality we wouldn't really use this as there is already a layer in the convolutional neural network that applies filters to an image to help with classification so we need an original image as not to loose potentially useful information.</p>
                    <a href="~/images/img/img2.png" class="pointer">
                        <img src="~/images/img/img2.png" alt="" class="img-responsive" />
                    </a>
                </li>
                <li>
                    <p class="left-align">Another type of edge filter.</p>
                    <a href="~/images/img/img3.png" class="pointer">
                        <img src="~/images/img/img3.png" alt="" class="img-responsive" />
                    </a>
                </li>
                <li>
                    <p class="left-align">A snippit of code where the action on the current list item (function with arguments) is selected and performed on the image.</p>
                    <a href="~/images/img/img4.png" class="pointer">
                        <img src="~/images/img/img4.png" alt="" class="img-responsive" />
                    </a>
                </li>
              </ul>
        </div>
    </div>
</main>
@Styles.Render("~/Content/style.css")